/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IICS20Authorization,
  IICS20AuthorizationInterface,
} from "../IICS20Authorization";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "grantee",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "granter",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "sourcePort",
            type: "string",
          },
          {
            internalType: "string",
            name: "sourceChannel",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "denom",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Coin[]",
            name: "spendLimit",
            type: "tuple[]",
          },
          {
            internalType: "string[]",
            name: "allowList",
            type: "string[]",
          },
        ],
        indexed: false,
        internalType: "struct ICS20Allocation[]",
        name: "allocations",
        type: "tuple[]",
      },
    ],
    name: "IBCTransferAuthorization",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "grantee",
        type: "address",
      },
      {
        internalType: "address",
        name: "granter",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "sourcePort",
            type: "string",
          },
          {
            internalType: "string",
            name: "sourceChannel",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "denom",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Coin[]",
            name: "spendLimit",
            type: "tuple[]",
          },
          {
            internalType: "string[]",
            name: "allowList",
            type: "string[]",
          },
        ],
        internalType: "struct ICS20Allocation[]",
        name: "allocations",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "grantee",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "sourcePort",
            type: "string",
          },
          {
            internalType: "string",
            name: "sourceChannel",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "denom",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Coin[]",
            name: "spendLimit",
            type: "tuple[]",
          },
          {
            internalType: "string[]",
            name: "allowList",
            type: "string[]",
          },
        ],
        internalType: "struct ICS20Allocation[]",
        name: "allocations",
        type: "tuple[]",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "grantee",
        type: "address",
      },
      {
        internalType: "string",
        name: "sourcePort",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceChannel",
        type: "string",
      },
      {
        internalType: "string",
        name: "denom",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "grantee",
        type: "address",
      },
      {
        internalType: "string",
        name: "sourcePort",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceChannel",
        type: "string",
      },
      {
        internalType: "string",
        name: "denom",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "grantee",
        type: "address",
      },
    ],
    name: "revoke",
    outputs: [
      {
        internalType: "bool",
        name: "revoked",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IICS20Authorization__factory {
  static readonly abi = _abi;
  static createInterface(): IICS20AuthorizationInterface {
    return new Interface(_abi) as IICS20AuthorizationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IICS20Authorization {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IICS20Authorization;
  }
}
